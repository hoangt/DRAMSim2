NUM_BANKS=16
NUM_ROWS=32768
NUM_COLS=4096
DEVICE_WIDTH=4

;================================================================================
;    A bit of background: 
;
;    Each column contains DEVICE_WIDTH bits. A row contains NUM_COLS columns.
;    Each bank contains NUM_ROWS rows. Therefore, the total storage per DRAM device is: 
;        PER_DEVICE_STORAGE = NUM_ROWS*NUM_COLS*DEVICE_WIDTH*NUM_BANKS (in bits) -> e.g. 1GB/device
;
;   A rank *must* have a 64 bit output bus (JEDEC standard), so each rank must have:
;        NUM_DEVICES_PER_RANK = 64/DEVICE_WIDTH  -> e.g. 64/16 = 4
;      (note: if you have multiple channels ganged together, the bus width is 
;      effectively NUM_CHANS * 64/DEVICE_WIDTH)
;   
;  If we multiply these two numbers to get the storage per rank (in bits), we get:
;      PER_RANK_STORAGE = PER_DEVICE_STORAGE*NUM_DEVICES_PER_RANK = NUM_ROWS*NUM_COLS*NUM_BANKS*64 -> 16GB/rank (16 devices/rank)
;
;  Finally, to get TOTAL_STORAGE, we need to multiply by NUM_RANKS
;      TOTAL_STORAGE = PER_RANK_STORAGE*NUM_RANKS (total storage in bits) -> defined when contructing MemoryControll object
;
;  So one could compute this in reverse -- compute NUM_DEVICES,
;  PER_DEVICE_STORAGE, and PER_RANK_STORAGE first since all these parameters
;  are set by the device ini. Then, TOTAL_STORAGE/PER_RANK_STORAGE = NUM_RANKS (calculated by SW)
;
;  The only way this could run into problems is if TOTAL_STORAGE < PER_RANK_STORAGE,
;  which could happen for very dense parts.
;================================================================

;in nanoseconds
;#define REFRESH_PERIOD 7800
REFRESH_PERIOD=7800
tCK=1.5 ;*

CL=10 ;*
AL=0 ;*
;AL=3; needs to be tRCD-1 or 0
;RL=(CL+AL)
;WL=(RL-1)
BL=8 ;*
tRAS=24;* 
tRCD=10 ;*
tRRD=4 ;*
tRC=34 ;*
tRP=10  ;*
tCCD=4 ;*
tRTP=5 ;*
tWTR=5 ;*
tWR=10 ;*
tRTRS=1; -- RANK PARAMETER, TODO 
tRFC=74;*
tFAW=20;*
tCKE=4 ;*
tXP=4 ;*

tCMD=1 ;*

IDD0=110;
IDD1=150;
IDD2P=12;
IDD2Q=60;
IDD2N=65;
IDD3Pf=40;
IDD3Ps=40;
IDD3N=60;
IDD4W=355;
IDD4R=290;
IDD5=240;
IDD6=6;
IDD6L=9;
IDD7=420;

;same bank
;READ_TO_PRE_DELAY=(AL+BL/2+max(tRTP,2)-2)
;WRITE_TO_PRE_DELAY=(WL+BL/2+tWR)
;READ_TO_WRITE_DELAY=(RL+BL/2+tRTRS-WL)
;READ_AUTOPRE_DELAY=(AL+tRTP+tRP)
;WRITE_AUTOPRE_DELAY=(WL+BL/2+tWR+tRP)
;WRITE_TO_READ_DELAY_B=(WL+BL/2+tWTR);interbank
;WRITE_TO_READ_DELAY_R=(WL+BL/2+tRTRS-RL);interrank

Vdd=1.5 ; TODO: double check this
